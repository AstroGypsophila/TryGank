apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

def keystore = file("sign/trygank.jks")
def signProperties = file("sign/signing.properties")

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }
    signingConfigs {

        debug {
            storeFile file("sign/trygank_debug.jks")
            storePassword '123456'
            keyAlias 'gypsophila'
            keyPassword '123456'
        }

        release {
            if (keystore.exists() && signProperties.exists()) {
                Properties props = new Properties()
                props.load(new FileInputStream(signProperties))
                keyAlias props['KEY_ALIAS']
                keyPassword props['KEY_PASSWORD']
                storeFile file(props['KEYSTORE_FILE'])
                storePassword props['KEYSTORE_PASSWORD']
            }

        }
    }
    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false  //设为false即可断点调试
//            shrinkResources false  //自动移除不用资源
            debuggable true //设为true
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true  //设为false即可断点调试
            shrinkResources true  //自动移除不用资源
            debuggable false //设为true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'


            // 多渠道打包
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为TryGank_v1.0.0_2016-12-27_fir.apk
                        def fileName = "TryGank_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    productFlavors {
        xiaomimarket {}
        wandoujia {}
        yingyongbao {}
        fir {}
        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }

    }
}

repositories {
    //反馈arr文件
    flatDir {
        dirs project(':Feedback').file('libs')
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':SwipeBack')
    compile project(':Feedback')
    compile rootProject.ext.dependencies["umeng-analytics"]
    testCompile 'junit:junit:4.12'
}
